formats:
  R:
    rd: [7, 11]
    rs1: [15, 19]
    rs2: [20, 24]
    opcode: [0, 6]
    f3: [12, 14] 
    f7: [25, 31]

  I:
    rd: [7, 11]
    rs1: [15, 19]
    imm: [20, 31]
    opcode: [0, 6]
    f3: [12, 14]
    shamt: [26, 31]

  S: 
    imm: [7, 11, 25, 31]
    rs1: [15, 19]
    rs2: [20, 24]
    opcode: [0, 6]
    f3: [12, 14]

  U:
    rd: [7, 11]
    imm: [12, 31]
    opcode: [0, 6]

  B: 
    rs1: [15, 19]
    rs2: [20, 24]
    imm: [7, 8, 11, 25, 30, 31]
    opcode: [0, 6]
    f3: [12, 14]

  J:
    rd: [7, 11]
    imm: [12, 19, 20, 21, 30, 31]
    opcode: [0, 6]

instructions:
  LUI:
    format: U
    opcode: 55
    preop:
    log: load upper immediate

  AUIPC:
    format: U
    opcode: 23
    preop: "get_pc() + "
    log: add upper immediate to pc

  ADDI:
    format: I
    opcode: 19
    f3: 0
    operator: '+'
    log: add immediate

  SLTI:
    format: I
    opcode: 19
    f3: 2
    operator: '<'
    afterop: '? 1 : 0'
    log: set less than immediate

  SLTIU:
    format: I
    opcode: 19
    f3: 3
    operator: '<'
    afterop: '? 1 : 0'
    type: uint64_t

  XORI:
    format: I
    opcode: 19
    f3: 4
    operator: '^'

  ORI:
    format: I
    opcode: 19
    f3: 6
    operator: '|'
  
  ANDI:
    format: I
    opcode: 19
    f3: 7
    operator: '&'
 
  SLLI:
    format: I
    opcode: 19
    f3: 1
    operator: '<<'
    type: uint64_t
    shamt: 0

  SRLI:
    format: I
    opcode: 19
    f3: 5
    operator: '>>'
    type: uint64_t
    shamt: 0

  SRAI: 
    format: I
    opcode: 19 
    f3: 5
    operator: '>>'
    shamt: 16

  LB:
    format: I
    opcode: 3
    f3: 0
    operator: '+'
    load: 8

  LH:
    format: I
    opcode: 3
    f3: 1
    operator: '+'
    load: 16

  LW:
    format: I
    opcode: 3
    f3: 2
    operator: '+'
    load: 32

  LBU:
    format: I
    opcode: 3
    f3: 4
    operator: '+'
    load: 8

  LHU:
    format: I
    opcode: 3
    f3: 5
    operator: '+'
    load: 16

  ADD:
    format: R
    opcode: 51
    f3: 0
    f7: 0
    operator: '+'

  SUB:
    format: R
    opcode: 51
    f3: 0
    f7: 32
    operator: '-'

  SLL:
    format: R
    opcode: 51
    f3: 1
    f7: 0
    operator: '<<' 

  SLT:
    format: R
    opcode: 51
    f3: 2
    f7: 0
    operator: '<s'

  SLTU:
    format: R
    opcode: 51
    f3: 3
    f7: 0
    operator: '<u'

  XOR:
    format: R
    opcode: 51
    f3: 4
    f7: 0
    operator: '<'

  SRL:
    format: R
    opcode: 51
    f3: 5
    f7: 0
    operator: '>>u'

  SRA:
    format: R
    opcode: 51
    f3: 5
    f7: 32
    operator: '>>s'

  OR:
    format: R
    opcode: 51
    f3: 6
    f7: 0
    operator: '|'

  AND:
    format: R
    opcode: 51
    f3: 7
    f7: 0
    operator: '&'

  